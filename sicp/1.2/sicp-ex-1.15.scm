; Exercise 1.15: 
; The sine of an angle (specified in radians) can be computed by making use of the approximation sinx≈x if x is sufficiently small, and the trigonometric identity to reduce the size of the argument of sin. 
; sinx = 3sin(x/3) - 4(sin^3)(x/3)
; (For purposes of this exercise an angle is considered “sufficiently small” if its magnitude is not greater than 0.1 radians.) These ideas are incorporated in the following procedures:

; How many times is the procedure p applied when (sine 12.15) is evaluated?
; What is the order of growth in space and number of steps (as a function of a) used by the process generated by the sine procedure when (sine a) is evaluated?
#lang sicp

(define counter 0)

(define (cube x) (* x x x))

(define (p x) 
  (set! counter (+ 1 counter)) ; for counting invocations of p
       (- (* 3 x) (* 4 (cube x))))


(define (sine angle)
    (display angle)
   (if (not (> (abs angle) 0.1))
       angle
       (p (sine (/ angle 3.0)))))

(sine 12.15) 
; To answer first question let's add a counter and increment it every time p called
counter; => 5     
; The process has constant delimeter 3. Every time p called the n is divded by 3. 
; if we have a division of n by a constant at every invocation of the procedure, the number of steps grows logarithmically O(log n)